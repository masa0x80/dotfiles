# XDG Base Directory Specification
export XDG_CONFIG_HOME=$HOME/.config
export XDG_CACHE_HOME=$HOME/.cache
export XDG_DATA_HOME=$HOME/.local/share

export UNAME_S=$(uname -s | tr '[:upper:]' '[:lower:]')

# load proxy settings
[ -r $HOME/.proxy ] && source $HOME/.proxy

# {{{ PATH
export PATH=/usr/local/bin:/bin:/usr/bin:/sbin:/usr/sbin

# brew install coreutils
[ -d /usr/local/opt/coreutils/libexec/gnubin ] && PATH=/usr/local/opt/coreutils/libexec/gnubin:$PATH

# brew install curl
[ -d /usr/local/opt/curl/bin ] && PATH=/usr/local/opt/curl/bin:$PATH

# brew install ncurses
[ -d /usr/local/opt/ncurses/bin ] && PATH=/usr/local/opt/ncurses/bin:$PATH

# brew install openssl
[ -d /usr/local/opt/openssl/bin ] && PATH=/usr/local/opt/openssl/bin:$PATH
[ -d /usr/local/opt/openssl/bin ] && export LIBRARY_PATH=$LIBRARY_PATH:/usr/local/opt/openssl/lib/

# brew install sqlite
[ -d /usr/local/opt/sqlite/bin ] && PATH=/usr/local/opt/sqlite/bin:$PATH

# brew install gettext
[ -d /usr/local/opt/gettext/bin ] && PATH=/usr/local/opt/gettext/bin:$PATH

# brew install gnu-getopt
[ -d /usr/local/opt/gnu-getopt/bin ] && PATH=/usr/local/opt/gnu-getopt/bin:$PATH

# brew install gnu-sed
[ -d /usr/local/opt/gnu-sed/libexec/gnubin ] && PATH=/usr/local/opt/gnu-sed/libexec/gnubin:$PATH

# brew install gnu-tar
[ -d /usr/local/opt/gnu-tar/libexec/gnubin ] && PATH=/usr/local/opt/gnu-tar/libexec/gnubin:$PATH

# brew install grep
[ -d /usr/local/opt/grep/libexec/gnubin ] && PATH=/usr/local/opt/grep/libexec/gnubin:$PATH
# }}} PATH

export LANG=en_US.UTF-8
export TERM=xterm-256color

export LESS='-RIXc'
if [ "$UNAME_S" = 'darwin' ]; then
  # http://www.tuxarena.com/2012/04/tutorial-colored-man-pages-how-it-works/
  export LESS_TERMCAP_mb=$(printf '\e[01;31m') # enter blinking mode – red
  export LESS_TERMCAP_md=$(printf '\e[01;33m') # enter double-bright mode – bold, yellow
  export LESS_TERMCAP_me=$(printf '\e[0m')     # turn off all appearance modes (mb, md, so, us)
  export LESS_TERMCAP_se=$(printf '\e[0m')     # leave standout mode
  export LESS_TERMCAP_so=$(printf '\e[01;32m') # enter standout mode – green
  export LESS_TERMCAP_ue=$(printf '\e[0m')     # leave underline mode
  export LESS_TERMCAP_us=$(printf '\e[04;34m') # enter underline mode – cyan
elif [ "$UNAME_S" = 'linux' ]; then
  export LESS_TERMCAP_mb=$'\e[1;31m'
  export LESS_TERMCAP_md=$'\e[1;33m'
  export LESS_TERMCAP_me=$'\e[0m'
  export LESS_TERMCAP_se=$'\e[0m'
  export LESS_TERMCAP_so=$'\e[01;32m'
  export LESS_TERMCAP_ue=$'\e[0m'
  export LESS_TERMCAP_us=$'\e[4;34m'
fi

# fzf options
export FZF_DEFAULT_OPTS='--reverse --extended --ansi --multi --cycle --bind=ctrl-j:accept,ctrl-u:page-up,ctrl-d:page-down,ctrl-z:toggle-all'

# gtags (GNU Global)
export GTAGSLABEL=pygments
if [ "$UNAME_S" = 'linux' ] && [ -d /usr/local/share/gtags ]; then
  export GTAGSCONF=/usr/local/share/gtags/gtags.conf
fi

# Disable homebrew analytics
[ "$UNAME_S" = 'darwin' ] && export HOMEBREW_NO_ANALYTICS=1

# anyenv
if [ -d $HOME/.anyenv ]; then
  export PATH=$HOME/.anyenv/bin:$PATH
  eval "$(anyenv init -)"
fi

# golang
if [ -d $HOME/.go ]; then
  export GOPATH=$HOME/.go
  export PATH=$GOPATH/bin:$PATH
  [ "$UNAME_S" = 'linux' ] && export PATH=/usr/local/go/bin:$PATH
fi

# rust
[ -d $HOME/.cargo ] && export PATH=$HOME/.cargo/bin:$PATH

# EDITOR
if type -a nvim >/dev/null 2>&1; then
  export EDITOR=nvim
elif type -a vim >/dev/null 2>&1; then
  export EDITOR=vim
fi

# PAGER
type -a less >/dev/null 2>&1 && export PAGER=less
type -a bat >/dev/null 2>&1 && export PAGER=bat

# bat
export BAT_CONFIG_PATH=$HOME/.config/bat/config

# sshrc config
export SSHHOME=$XDG_CONFIG_HOME/sshrc

# NOTE: dynamic library support
#       ref https://github.com/nixprime/cpsm
export PYTHON_CONFIGURE_OPTS='--enable-framework'

# rails (for rails server alias)
export RAILS_SERVER_PORT=3000
