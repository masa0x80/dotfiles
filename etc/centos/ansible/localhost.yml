- hosts: localhost
  connection: local
  gather_facts: no
  vars:
    home_dir: "{{ lookup('env', 'HOME') }}"
    src_dir:  "{{ home_dir }}/src"
    bin_dir:  /usr/local/bin

    proxy_env:
      ftp_proxy: "{{ lookup('env', 'http_proxy') }}"

    ruby_version:     2.2.0
    git_version:      2.3.4
    libevent_version: 2.0.21-stable
    tmux_version:     1.9a
    peco_version:     v0.2.11
    direnv_version:   v2.6.0
    pt_version:       v1.7.6
    vim_version:      7.4
    mysql_version:    5.6.25
  tasks:
    - include: tasks/yum_settings.yml
    - include: tasks/yum_update.yml
    - include: tasks/basic_tools.yml
    - include: tasks/imagemagick.yml
    - include: tasks/aws.yml

    - name: check git
      shell: PATH=$PATH:{{ bin_dir }} type -a git && git --version | grep {{ git_version }}
      register: git
      failed_when:  git.rc not in [0, 1]
      changed_when: git.rc not in [0, 1]
    - include: tasks/git.yml
      when: git|failed

    - name: check libevent
      shell: ldconfig -p | grep '/usr/lib64/libevent-2.0.so.5'
      register: libevent
      failed_when:  libevent.rc not in [0, 1]
      changed_when: libevent.rc not in [0, 1]
    - include: tasks/libevent.yml
      when: libevent|failed

    - name: check tmux
      shell: PATH=$PATH:{{ bin_dir }} type -a tmux
      register: tmux
      failed_when:  tmux.rc not in [0, 1]
      changed_when: tmux.rc not in [0, 1]
    - include: tasks/tmux.yml
      when: tmux|failed

    - name: check peco
      stat: path={{ bin_dir }}/peco
      register: peco
    - include: tasks/peco.yml
      when: peco.stat.exists == False

    - name: check direnv
      stat: path={{ bin_dir }}/direnv
      register: direnv
    - include: tasks/direnv.yml
      when: direnv.stat.exists == False

    - name: check jq
      stat: path={{ bin_dir }}/jq
      register: jq
    - include: tasks/jq.yml
      when: jq.stat.exists == False

    - name: check pt
      stat: path={{ bin_dir }}/pt
      register: pt
    - include: tasks/pt.yml
      when: pt.stat.exists == False

    - name: check ruby version
      stat: path={{ home_dir }}/.rbenv
      register: rbenv_dir
    - include: tasks/rbenv.yml
      when: rbenv_dir.stat.exists == False

    - name: check vim
      shell: PATH=$PATH:{{ bin_dir }} type -a vim && vim --version | grep 'VIM - Vi IMproved {{ vim_version }}'
      register: vim
      failed_when:  vim.rc not in [0, 1]
      changed_when: vim.rc not in [0, 1]
    - include: tasks/vim.yml
      when: vim|failed

    - name: check mysql version
      shell: mysqld --version | sed -e 's/.*Ver \([0-9.]\+\) .\+/\1/'
      register: installed_mysql_version
    - include: tasks/mysql.yml
      when: installed_mysql_version.stdout | version_compare(mysql_version, '>')
